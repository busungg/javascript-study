/**
 * ---------------------------------------------------
 * 함수 선언 구문 vs 함수 표현식
 * Q: 함수 표현식도 var 문은 끌어올려지는데
 *    왜 자바스크립트 구문에서 모두 사용될 수 있는가?
 * A: 식별자는 끌어올려지지만 초기화는 해당 구문에서
 *    진행되기 때문에 조건문에 해당되지 않으면 function
 *    이 할당되지 않는다.
 * ---------------------------------------------------
 */

/**
 * ---------------------------------------------------
 * Arguments
 * Q: 원시 타입은 값이므로 값이 복사된다.
 *    그렇다면 Arguments가 변해도 매개변수가 변하지 않을 것 이다.
 * A: 아니다.
 *    식별자는 메모리 주소를 바라보고 있는데 arguments또한 같은
 *    메모리 주소를 바라보고 있기 때문에 값이 변경되서
 *    동일하게 변경된다.
 * ---------------------------------------------------
 */

function argumentTest(x) {
  console.log(x);
  arguments[0] = 10;
  console.log(x);
}

argumentTest(1);

/**
 * ---------------------------------------------------
 * 함수 프로퍼티
 * Q: 함수 프로퍼티를 사용해보자
 * A:
 * ---------------------------------------------------
 */
(function () {
  function factorial(n) {
    if (isFinite(n) && n > 0 && n == Math.round(n)) {
      //유한, 양의 정수만 받음
      if (!(n in factorial)) {
        //만약 캐시 해둔 결과가 없다면
        factorial[n] = n * factorial(n - 1); // 팩터리얼을 계산하고, 계산 값 캐시
      }

      return factorial[n];
    } else {
      return NaN; //잘못된 입력 값이 들어오면 NaN을 반환한다.
    }
  }
  factorial[1] = 1;

  console.log(factorial(10));
  console.dir(factorial);
})();
